/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.Rectangle;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.InputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class ClothingInfo extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    private String file_name = "save.txt";
    private static final int PRICE_INDEX = 6;
    private static final int CATEGORY_INDEX = 3;

    private static final String[] COLUMNS = {"Item ID", "Item Name", "Gender",
        "Category", "Size", "Brand", "Price", "Stock", "Rating", "Discount",
        "Dry Cleaning", "Remarks"};

    private Rectangle defaultPanelPositions;

    private Border defaultBorder;
    private Border errorBorder = BorderFactory.createLineBorder(new Color(153, 0, 153), 3);
    private Border defaultLableBorder;

    private ArrayList<JButton> allStarButtons = new ArrayList();
    private ArrayList<Color> backgroundColors = new ArrayList();
    private ArrayList<JTextField> compulsaryFields = new ArrayList();
    private ArrayList<String[]> currentTableData;

    private int userRating = 0;

    private String dataField = "";

    public ClothingInfo() {
        initComponents();

        allStarButtons.add(starRating1);
        allStarButtons.add(starRating2);
        allStarButtons.add(starRating3);
        allStarButtons.add(starRating4);
        allStarButtons.add(starRating5);

        // Add the colors of all the categories
        backgroundColors.add(new Color(252, 92, 92));
        backgroundColors.add(new Color(216, 148, 245));
        backgroundColors.add(new Color(155, 253, 155));
        backgroundColors.add(new Color(160, 60, 234));
        backgroundColors.add(new Color(253, 253, 178));
        backgroundColors.add(new Color(112, 112, 231));

        // Add the compulasry required fields.
        compulsaryFields.add(itemIdText);
        compulsaryFields.add(brandText);
        compulsaryFields.add(stockText);
        compulsaryFields.add(priceText);
        compulsaryFields.add(itemNameText);

        // Get the original borders of the components.
        defaultBorder = itemIdText.getBorder();
        defaultLableBorder = itemIdLabel.getBorder();

        // Make sure that mainPanel is the only component in the frame.
        // Remove all the other components.
        this.remove(addItemPanel);
        this.remove(tablePannel);

        defaultPanelPositions = mainPanel.getVisibleRect();
        repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        aboutDialog = new javax.swing.JDialog();
        aboutDialogLogo = new javax.swing.JLabel();
        aboutTextImage = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        shoePanel = new javax.swing.JPanel();
        shoeClickable = new javax.swing.JLabel();
        jacketPanel = new javax.swing.JPanel();
        jacketClickable = new javax.swing.JLabel();
        pantPanel = new javax.swing.JPanel();
        pantClickable = new javax.swing.JLabel();
        sweaterPanel = new javax.swing.JPanel();
        sweaterClickable = new javax.swing.JLabel();
        hatPanel = new javax.swing.JPanel();
        hatClickable = new javax.swing.JLabel();
        addItemButon = new javax.swing.JButton();
        checkItemButton = new javax.swing.JButton();
        mainLogo = new javax.swing.JLabel();
        addItemPanel = new javax.swing.JPanel();
        itemIdLabel = new javax.swing.JLabel();
        brandLabel = new javax.swing.JLabel();
        sizeLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        dryCleaningLabel = new javax.swing.JLabel();
        itemNameLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        discountLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        stockLabel = new javax.swing.JLabel();
        remarksLabel = new javax.swing.JLabel();
        ratingsLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        itemIdText = new javax.swing.JTextField();
        brandText = new javax.swing.JTextField();
        itemNameText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        discountText = new javax.swing.JTextField();
        sizeCombo = new javax.swing.JComboBox<>();
        maleGenderRadio = new javax.swing.JRadioButton();
        femaleGenderRadio = new javax.swing.JRadioButton();
        washableCheck = new javax.swing.JCheckBox();
        dryableCheck = new javax.swing.JCheckBox();
        stockText = new javax.swing.JTextField();
        categoryCombo = new javax.swing.JComboBox<>();
        logoImg = new javax.swing.JLabel();
        remarksText = new javax.swing.JTextField();
        starRating1 = new javax.swing.JButton();
        starRating2 = new javax.swing.JButton();
        starRating3 = new javax.swing.JButton();
        starRating4 = new javax.swing.JButton();
        starRating5 = new javax.swing.JButton();
        addItemPanelBackHolder = new javax.swing.JPanel();
        goBackAddItem = new javax.swing.JLabel();
        tablePannel = new javax.swing.JPanel();
        tablePanelBackHolder = new javax.swing.JPanel();
        goBackTablePanel = new javax.swing.JLabel();
        tableLogo = new javax.swing.JLabel();
        tableScrollPane = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        filterPanel = new javax.swing.JPanel();
        filterTitleLabel = new javax.swing.JLabel();
        showCategoriesCombo = new javax.swing.JComboBox<>();
        showCategoryLabel = new javax.swing.JLabel();
        searchByLabel = new javax.swing.JLabel();
        searchBoxText = new javax.swing.JTextField();
        sortPriceButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        categoryInfoButton = new javax.swing.JButton();
        mainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        selectMenuItem = new javax.swing.JMenuItem();
        menuSeparator = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();

        aboutDialog.setTitle("About");
        aboutDialog.setAlwaysOnTop(true);
        aboutDialog.setBackground(java.awt.Color.gray);
        aboutDialog.setMinimumSize(null);
        aboutDialog.setResizable(false);
        aboutDialog.setSize(new java.awt.Dimension(450, 300));
        aboutDialog.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aboutDialogFocusLost(evt);
            }
        });

        aboutDialogLogo.setBackground(new java.awt.Color(255, 255, 255));
        aboutDialogLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/logoBlack.png"))); // NOI18N

        aboutTextImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/aboutText.png"))); // NOI18N

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(aboutTextImage))
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(aboutDialogLogo)))
                .addContainerGap())
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aboutDialogLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aboutTextImage)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(880, 630));
        setMinimumSize(new java.awt.Dimension(880, 630));
        setPreferredSize(new java.awt.Dimension(880, 630));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(234, 233, 233));
        mainPanel.setMaximumSize(new java.awt.Dimension(865, 630));
        mainPanel.setMinimumSize(new java.awt.Dimension(865, 630));

        shoePanel.setBackground(new java.awt.Color(234, 233, 233));
        shoePanel.setMaximumSize(new java.awt.Dimension(220, 210));
        shoePanel.setMinimumSize(new java.awt.Dimension(220, 210));
        shoePanel.setPreferredSize(new java.awt.Dimension(240, 210));

        shoeClickable.setBackground(new java.awt.Color(234, 233, 233));
        shoeClickable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/shoes.png"))); // NOI18N
        shoeClickable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shoeClickable.setMaximumSize(new java.awt.Dimension(220, 210));
        shoeClickable.setMinimumSize(new java.awt.Dimension(220, 210));
        shoeClickable.setPreferredSize(new java.awt.Dimension(220, 210));
        shoeClickable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shoeClickableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shoeClickableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shoeClickableMouseExited(evt);
            }
        });

        javax.swing.GroupLayout shoePanelLayout = new javax.swing.GroupLayout(shoePanel);
        shoePanel.setLayout(shoePanelLayout);
        shoePanelLayout.setHorizontalGroup(
            shoePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shoePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shoeClickable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        shoePanelLayout.setVerticalGroup(
            shoePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(shoeClickable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jacketPanel.setBackground(new java.awt.Color(234, 233, 233));
        jacketPanel.setMaximumSize(new java.awt.Dimension(220, 210));
        jacketPanel.setMinimumSize(new java.awt.Dimension(220, 210));

        jacketClickable.setBackground(new java.awt.Color(234, 233, 233));
        jacketClickable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/Jacket.png"))); // NOI18N
        jacketClickable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jacketClickable.setMaximumSize(new java.awt.Dimension(220, 210));
        jacketClickable.setMinimumSize(new java.awt.Dimension(220, 210));
        jacketClickable.setPreferredSize(new java.awt.Dimension(220, 210));
        jacketClickable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jacketClickableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jacketClickableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jacketClickableMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jacketPanelLayout = new javax.swing.GroupLayout(jacketPanel);
        jacketPanel.setLayout(jacketPanelLayout);
        jacketPanelLayout.setHorizontalGroup(
            jacketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jacketPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jacketClickable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        jacketPanelLayout.setVerticalGroup(
            jacketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jacketClickable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pantPanel.setBackground(new java.awt.Color(234, 233, 233));
        pantPanel.setMaximumSize(new java.awt.Dimension(220, 210));
        pantPanel.setMinimumSize(new java.awt.Dimension(220, 210));

        pantClickable.setBackground(new java.awt.Color(234, 233, 233));
        pantClickable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/Pant.png"))); // NOI18N
        pantClickable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pantClickable.setMaximumSize(new java.awt.Dimension(220, 210));
        pantClickable.setMinimumSize(new java.awt.Dimension(220, 210));
        pantClickable.setPreferredSize(new java.awt.Dimension(220, 210));
        pantClickable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pantClickableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pantClickableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pantClickableMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pantPanelLayout = new javax.swing.GroupLayout(pantPanel);
        pantPanel.setLayout(pantPanelLayout);
        pantPanelLayout.setHorizontalGroup(
            pantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pantClickable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        pantPanelLayout.setVerticalGroup(
            pantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pantClickable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        sweaterPanel.setBackground(new java.awt.Color(234, 233, 233));
        sweaterPanel.setMaximumSize(new java.awt.Dimension(220, 210));
        sweaterPanel.setMinimumSize(new java.awt.Dimension(220, 210));

        sweaterClickable.setBackground(new java.awt.Color(234, 233, 233));
        sweaterClickable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/Sweater.png"))); // NOI18N
        sweaterClickable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sweaterClickable.setMaximumSize(new java.awt.Dimension(220, 210));
        sweaterClickable.setMinimumSize(new java.awt.Dimension(220, 210));
        sweaterClickable.setPreferredSize(new java.awt.Dimension(220, 210));
        sweaterClickable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sweaterClickableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sweaterClickableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sweaterClickableMouseExited(evt);
            }
        });

        javax.swing.GroupLayout sweaterPanelLayout = new javax.swing.GroupLayout(sweaterPanel);
        sweaterPanel.setLayout(sweaterPanelLayout);
        sweaterPanelLayout.setHorizontalGroup(
            sweaterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sweaterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sweaterClickable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        sweaterPanelLayout.setVerticalGroup(
            sweaterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sweaterClickable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        hatPanel.setBackground(new java.awt.Color(234, 233, 233));
        hatPanel.setMaximumSize(new java.awt.Dimension(220, 210));
        hatPanel.setMinimumSize(new java.awt.Dimension(220, 210));

        hatClickable.setBackground(new java.awt.Color(234, 233, 233));
        hatClickable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/Hat.png"))); // NOI18N
        hatClickable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hatClickable.setMaximumSize(new java.awt.Dimension(220, 210));
        hatClickable.setMinimumSize(new java.awt.Dimension(220, 210));
        hatClickable.setPreferredSize(new java.awt.Dimension(220, 210));
        hatClickable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hatClickableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hatClickableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hatClickableMouseExited(evt);
            }
        });

        javax.swing.GroupLayout hatPanelLayout = new javax.swing.GroupLayout(hatPanel);
        hatPanel.setLayout(hatPanelLayout);
        hatPanelLayout.setHorizontalGroup(
            hatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hatClickable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        hatPanelLayout.setVerticalGroup(
            hatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hatClickable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        addItemButon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/add.png"))); // NOI18N
        addItemButon.setBorder(null);
        addItemButon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addItemButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButonActionPerformed(evt);
            }
        });

        checkItemButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/check.png"))); // NOI18N
        checkItemButton.setBorder(null);
        checkItemButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkItemButtonActionPerformed(evt);
            }
        });

        mainLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/logoBlack.png"))); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shoePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sweaterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(hatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkItemButton)
                                    .addComponent(addItemButon)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jacketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(pantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(mainLogo)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainLogo)
                .addGap(50, 50, 50)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shoePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jacketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sweaterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(addItemButon)
                        .addGap(28, 28, 28)
                        .addComponent(checkItemButton)))
                .addGap(100, 100, 100))
        );

        addItemPanel.setBackground(new java.awt.Color(255, 48, 48));
        addItemPanel.setMaximumSize(new java.awt.Dimension(865, 630));
        addItemPanel.setMinimumSize(new java.awt.Dimension(865, 630));
        addItemPanel.setPreferredSize(new java.awt.Dimension(865, 630));

        itemIdLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        itemIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        itemIdLabel.setText("Item ID");

        brandLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        brandLabel.setForeground(new java.awt.Color(255, 255, 255));
        brandLabel.setText("Brand");

        sizeLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        sizeLabel.setForeground(new java.awt.Color(255, 255, 255));
        sizeLabel.setText("Size");

        genderLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender");

        dryCleaningLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        dryCleaningLabel.setForeground(new java.awt.Color(255, 255, 255));
        dryCleaningLabel.setText("Dry Cleaning");

        itemNameLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        itemNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        itemNameLabel.setText("Item Name");

        priceLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText("Price");

        discountLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        discountLabel.setForeground(new java.awt.Color(255, 255, 255));
        discountLabel.setText("Discount");

        categoryLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        categoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        categoryLabel.setText("Category");

        stockLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        stockLabel.setForeground(new java.awt.Color(255, 255, 255));
        stockLabel.setText("Stock");

        remarksLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        remarksLabel.setForeground(new java.awt.Color(255, 255, 255));
        remarksLabel.setText("Remarks");

        ratingsLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        ratingsLabel.setForeground(new java.awt.Color(255, 255, 255));
        ratingsLabel.setText("Rating");

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/Save_btn.png"))); // NOI18N
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.setMaximumSize(new java.awt.Dimension(111, 54));
        saveButton.setMinimumSize(new java.awt.Dimension(111, 54));
        saveButton.setPreferredSize(new java.awt.Dimension(111, 54));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        itemIdText.setMaximumSize(new java.awt.Dimension(51, 35));
        itemIdText.setMinimumSize(new java.awt.Dimension(51, 35));
        itemIdText.setPreferredSize(new java.awt.Dimension(51, 35));
        itemIdText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemIdTextInputMethodTextChanged(evt);
            }
        });
        itemIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemIdTextActionPerformed(evt);
            }
        });
        itemIdText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemIdTextKeyPressed(evt);
            }
        });

        brandText.setMaximumSize(new java.awt.Dimension(180, 35));
        brandText.setMinimumSize(new java.awt.Dimension(150, 35));
        brandText.setPreferredSize(new java.awt.Dimension(180, 35));

        itemNameText.setMaximumSize(new java.awt.Dimension(200, 35));
        itemNameText.setPreferredSize(new java.awt.Dimension(200, 35));

        priceText.setMaximumSize(new java.awt.Dimension(150, 35));
        priceText.setPreferredSize(new java.awt.Dimension(150, 35));
        priceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTextKeyPressed(evt);
            }
        });

        discountText.setMaximumSize(new java.awt.Dimension(150, 35));
        discountText.setPreferredSize(new java.awt.Dimension(150, 35));
        discountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTextActionPerformed(evt);
            }
        });
        discountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountTextKeyReleased(evt);
            }
        });

        sizeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Size---", "XXL", "XL", "L", "M", "S" }));
        sizeCombo.setBorder(null);
        sizeCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sizeCombo.setMaximumSize(new java.awt.Dimension(120, 35));
        sizeCombo.setMinimumSize(new java.awt.Dimension(120, 35));
        sizeCombo.setPreferredSize(new java.awt.Dimension(120, 35));

        genderButtonGroup.add(maleGenderRadio);
        maleGenderRadio.setFont(getUserFont("beViet.ttf", 12)
        );
        maleGenderRadio.setForeground(new java.awt.Color(255, 255, 255));
        maleGenderRadio.setText("Male");
        maleGenderRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleGenderRadioActionPerformed(evt);
            }
        });

        genderButtonGroup.add(femaleGenderRadio);
        femaleGenderRadio.setFont(getUserFont("beViet.ttf", 12)
        );
        femaleGenderRadio.setForeground(new java.awt.Color(255, 255, 255));
        femaleGenderRadio.setText("Female");

        washableCheck.setFont(getUserFont("beViet.ttf", 12)
        );
        washableCheck.setForeground(new java.awt.Color(255, 255, 255));
        washableCheck.setText("Washable");

        dryableCheck.setFont(getUserFont("beViet.ttf", 12));
        dryableCheck.setForeground(new java.awt.Color(255, 255, 255));
        dryableCheck.setText("Dryable");
        dryableCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dryableCheckActionPerformed(evt);
            }
        });

        stockText.setMaximumSize(new java.awt.Dimension(51, 35));
        stockText.setMinimumSize(new java.awt.Dimension(51, 35));
        stockText.setPreferredSize(new java.awt.Dimension(51, 35));
        stockText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockTextActionPerformed(evt);
            }
        });
        stockText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockTextKeyPressed(evt);
            }
        });

        categoryCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Category---", "Shoes", "Sweater", "Jacket", "Pant", "Hat" }));
        categoryCombo.setBorder(null);
        categoryCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        categoryCombo.setMaximumSize(new java.awt.Dimension(120, 35));
        categoryCombo.setMinimumSize(new java.awt.Dimension(120, 35));
        categoryCombo.setPreferredSize(new java.awt.Dimension(120, 35));

        logoImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/logoBlack.png"))); // NOI18N

        remarksText.setMaximumSize(new java.awt.Dimension(200, 35));
        remarksText.setPreferredSize(new java.awt.Dimension(200, 35));

        starRating1.setBackground(new java.awt.Color(255,45,45,0)
        );
        starRating1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/star_unslelected.png"))); // NOI18N
        starRating1.setMaximumSize(new java.awt.Dimension(40, 40));
        starRating1.setMinimumSize(new java.awt.Dimension(40, 40));
        starRating1.setPreferredSize(new java.awt.Dimension(40, 40));
        starRating1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starRating1ActionPerformed(evt);
            }
        });

        starRating2.setBackground(new java.awt.Color(255,45,45,0)
        );
        starRating2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/star_unslelected.png"))); // NOI18N
        starRating2.setMaximumSize(new java.awt.Dimension(40, 40));
        starRating2.setMinimumSize(new java.awt.Dimension(40, 40));
        starRating2.setPreferredSize(new java.awt.Dimension(40, 40));
        starRating2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starRating2ActionPerformed(evt);
            }
        });

        starRating3.setBackground(new java.awt.Color(255,45,45,0)
        );
        starRating3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/star_unslelected.png"))); // NOI18N
        starRating3.setMaximumSize(new java.awt.Dimension(40, 40));
        starRating3.setMinimumSize(new java.awt.Dimension(40, 40));
        starRating3.setPreferredSize(new java.awt.Dimension(40, 40));
        starRating3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starRating3ActionPerformed(evt);
            }
        });

        starRating4.setBackground(new java.awt.Color(255,45,45,0)
        );
        starRating4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/star_unslelected.png"))); // NOI18N
        starRating4.setMaximumSize(new java.awt.Dimension(40, 40));
        starRating4.setMinimumSize(new java.awt.Dimension(40, 40));
        starRating4.setPreferredSize(new java.awt.Dimension(40, 40));
        starRating4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starRating4ActionPerformed(evt);
            }
        });

        starRating5.setBackground(new java.awt.Color(255,45,45,0)
        );
        starRating5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/star_unslelected.png"))); // NOI18N
        starRating5.setMaximumSize(new java.awt.Dimension(40, 40));
        starRating5.setMinimumSize(new java.awt.Dimension(40, 40));
        starRating5.setPreferredSize(new java.awt.Dimension(40, 40));
        starRating5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starRating5ActionPerformed(evt);
            }
        });

        addItemPanelBackHolder.setBackground(new java.awt.Color(255, 48, 48));

        goBackAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/back.png"))); // NOI18N
        goBackAddItem.setMaximumSize(new java.awt.Dimension(30, 30));
        goBackAddItem.setMinimumSize(new java.awt.Dimension(30, 30));
        goBackAddItem.setPreferredSize(new java.awt.Dimension(100, 100));
        goBackAddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goBackAddItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                goBackAddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                goBackAddItemMouseExited(evt);
            }
        });

        tablePanelBackHolder.setSize(30, 30);

        javax.swing.GroupLayout addItemPanelBackHolderLayout = new javax.swing.GroupLayout(addItemPanelBackHolder);
        addItemPanelBackHolder.setLayout(addItemPanelBackHolderLayout);
        addItemPanelBackHolderLayout.setHorizontalGroup(
            addItemPanelBackHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addItemPanelBackHolderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(goBackAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        addItemPanelBackHolderLayout.setVerticalGroup(
            addItemPanelBackHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addItemPanelBackHolderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(goBackAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        tablePanelBackHolder.setBackground(new Color(0,0,0,0));

        javax.swing.GroupLayout addItemPanelLayout = new javax.swing.GroupLayout(addItemPanel);
        addItemPanel.setLayout(addItemPanelLayout);
        addItemPanelLayout.setHorizontalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addItemPanelBackHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(292, 292, 292)
                        .addComponent(logoImg)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addItemPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(genderLabel)
                                        .addComponent(sizeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(brandLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(itemIdLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(dryCleaningLabel))
                                .addGap(43, 43, 43)
                                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(washableCheck)
                                        .addGap(23, 23, 23)
                                        .addComponent(dryableCheck))
                                    .addComponent(brandText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addComponent(maleGenderRadio)
                                        .addGap(18, 18, 18)
                                        .addComponent(femaleGenderRadio))
                                    .addGroup(addItemPanelLayout.createSequentialGroup()
                                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                                .addComponent(itemIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(50, 50, 50))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addItemPanelLayout.createSequentialGroup()
                                                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(remarksLabel)
                                                    .addComponent(ratingsLabel))
                                                .addGap(23, 23, 23)))
                                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(remarksText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                                .addComponent(starRating1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(starRating2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(starRating3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(starRating4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(starRating5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                .addGap(293, 293, 293)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceLabel)
                            .addComponent(itemNameLabel)
                            .addComponent(discountLabel)
                            .addComponent(categoryLabel)
                            .addComponent(stockLabel))))
                .addGap(39, 39, 39)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(categoryCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(discountText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(87, 87, 87))
        );
        addItemPanelLayout.setVerticalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoImg)
                    .addComponent(addItemPanelBackHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemIdLabel)
                    .addComponent(itemNameLabel)
                    .addComponent(itemIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brandLabel)
                    .addComponent(priceLabel)
                    .addComponent(brandText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountLabel)
                    .addComponent(sizeLabel)
                    .addComponent(discountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoryLabel)
                        .addComponent(categoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(genderLabel)
                        .addComponent(maleGenderRadio)
                        .addComponent(femaleGenderRadio)))
                .addGap(25, 25, 25)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stockLabel)
                    .addComponent(dryCleaningLabel)
                    .addComponent(washableCheck)
                    .addComponent(dryableCheck)
                    .addComponent(stockText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remarksLabel)
                    .addComponent(remarksText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(starRating1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addItemPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ratingsLabel))
                            .addComponent(starRating4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(starRating5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(starRating3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addComponent(starRating2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        tablePannel.setBackground(new java.awt.Color(252, 92, 92));
        tablePannel.setMaximumSize(new java.awt.Dimension(865, 630));
        tablePannel.setMinimumSize(new java.awt.Dimension(865, 630));
        tablePannel.setPreferredSize(new java.awt.Dimension(865, 630));

        tablePanelBackHolder.setBackground(new Color(0,0,0,0));
        tablePanelBackHolder.setMaximumSize(new java.awt.Dimension(30, 30));

        goBackTablePanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/back.png"))); // NOI18N
        goBackTablePanel.setMaximumSize(new java.awt.Dimension(30, 30));
        goBackTablePanel.setMinimumSize(new java.awt.Dimension(30, 30));
        goBackTablePanel.setPreferredSize(new java.awt.Dimension(100, 100));
        goBackTablePanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                goBackTablePanelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                goBackTablePanelFocusLost(evt);
            }
        });
        goBackTablePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goBackTablePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                goBackTablePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                goBackTablePanelMouseExited(evt);
            }
        });

        tablePanelBackHolder.setSize(30, 30);

        javax.swing.GroupLayout tablePanelBackHolderLayout = new javax.swing.GroupLayout(tablePanelBackHolder);
        tablePanelBackHolder.setLayout(tablePanelBackHolderLayout);
        tablePanelBackHolderLayout.setHorizontalGroup(
            tablePanelBackHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelBackHolderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(goBackTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        tablePanelBackHolderLayout.setVerticalGroup(
            tablePanelBackHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelBackHolderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(goBackTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        tableLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/informationSystem/Selected_icon/logoBlack.png"))); // NOI18N

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Gender", "Category", "Size", "Brand", "Price", "Stock", "Rating", "Discount", "Dry Cleaning", "Remarks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTable.setToolTipText("");
        itemsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        itemsTable.setFillsViewportHeight(true);
        itemsTable.setMaximumSize(new java.awt.Dimension(865, 64));
        itemsTable.setMinimumSize(new java.awt.Dimension(865, 64));
        itemsTable.setName(""); // NOI18N
        itemsTable.setSelectionBackground(new java.awt.Color(121, 180, 163));
        itemsTable.getTableHeader().setReorderingAllowed(false);
        tableScrollPane.setViewportView(itemsTable);
        if (itemsTable.getColumnModel().getColumnCount() > 0) {
            itemsTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            itemsTable.getColumnModel().getColumn(4).setPreferredWidth(50);
            itemsTable.getColumnModel().getColumn(7).setPreferredWidth(50);
            itemsTable.getColumnModel().getColumn(10).setPreferredWidth(100);
        }

        filterPanel.setBackground(new java.awt.Color(252, 92, 92));
        filterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, null));

        filterTitleLabel.setFont(getUserFont("beViet.ttf", 24)
        );
        filterTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        filterTitleLabel.setText("Filters");

        showCategoriesCombo.setForeground(new java.awt.Color(255, 255, 255));
        showCategoriesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Categories", "Shoes", "Sweater", "Jacket", "Hat", "Pant" }));
        showCategoriesCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showCategoriesComboItemStateChanged(evt);
            }
        });

        showCategoryLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        showCategoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        showCategoryLabel.setText("Show Catagories");

        searchByLabel.setFont(getUserFont("beViet.ttf", 14)
        );
        searchByLabel.setForeground(new java.awt.Color(255, 255, 255));
        searchByLabel.setText("Search By Price ");

        searchBoxText.setMaximumSize(new java.awt.Dimension(69, 28));
        searchBoxText.setMinimumSize(new java.awt.Dimension(69, 28));
        searchBoxText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchBoxTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchBoxTextFocusLost(evt);
            }
        });

        sortPriceButton.setText("Sort By Price");
        sortPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortPriceButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        categoryInfoButton.setText("Category details");
        categoryInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(filterTitleLabel))
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(filterPanelLayout.createSequentialGroup()
                                .addComponent(categoryInfoButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sortPriceButton))
                            .addGroup(filterPanelLayout.createSequentialGroup()
                                .addComponent(showCategoriesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(showCategoryLabel)
                                .addGap(134, 134, 134)
                                .addComponent(searchByLabel)))
                        .addGap(18, 18, 18)
                        .addComponent(searchBoxText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filterTitleLabel)
                .addGap(30, 30, 30)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showCategoriesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showCategoryLabel)
                    .addComponent(searchByLabel)
                    .addComponent(searchBoxText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(27, 27, 27)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryInfoButton)
                    .addComponent(sortPriceButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tablePannelLayout = new javax.swing.GroupLayout(tablePannel);
        tablePannel.setLayout(tablePannelLayout);
        tablePannelLayout.setHorizontalGroup(
            tablePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane)
            .addGroup(tablePannelLayout.createSequentialGroup()
                .addGroup(tablePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablePannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tablePanelBackHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(304, 304, 304)
                        .addComponent(tableLogo))
                    .addGroup(tablePannelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        tablePannelLayout.setVerticalGroup(
            tablePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePannelLayout.createSequentialGroup()
                .addGroup(tablePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablePannelLayout.createSequentialGroup()
                        .addContainerGap(14, Short.MAX_VALUE)
                        .addComponent(tableLogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE))
                    .addGroup(tablePannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tablePanelBackHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)))
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        mainMenu.setName(""); // NOI18N

        fileMenu.setText("File");

        selectMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        selectMenuItem.setText("Select");
        selectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(selectMenuItem);
        fileMenu.add(menuSeparator);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenu.add(fileMenu);

        optionsMenu.setText("Options");
        optionsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsMenuActionPerformed(evt);
            }
        });

        helpMenuItem.setText("Help");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        optionsMenu.add(helpMenuItem);

        mainMenu.add(optionsMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tablePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tablePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shoeClickableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shoeClickableMouseEntered
        // TODO add your handling code here:
        setLabelIcon(shoeClickable, "shoes_expanded.png");
    }//GEN-LAST:event_shoeClickableMouseEntered

    private void shoeClickableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shoeClickableMouseExited
        // TODO add your handling code here:
        setLabelIcon(shoeClickable, "shoes.png");
    }//GEN-LAST:event_shoeClickableMouseExited

    private void pantClickableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pantClickableMouseEntered
        // TODO add your handling code here:
        setLabelIcon(pantClickable, "Pant_expand.png");
    }//GEN-LAST:event_pantClickableMouseEntered

    private void pantClickableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pantClickableMouseExited
        // TODO add your handling code here:
        setLabelIcon(pantClickable, "Pant.png");
    }//GEN-LAST:event_pantClickableMouseExited

    private void sweaterClickableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sweaterClickableMouseEntered
        // TODO add your handling code here:
        setLabelIcon(sweaterClickable, "Sweater_expand.png");

    }//GEN-LAST:event_sweaterClickableMouseEntered

    private void sweaterClickableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sweaterClickableMouseExited
        // TODO add your handling code here:
        setLabelIcon(sweaterClickable, "Sweater.png");
    }//GEN-LAST:event_sweaterClickableMouseExited

    private void jacketClickableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jacketClickableMouseEntered
        // TODO add your handling code here:
        setLabelIcon(jacketClickable, "Jacket_expand.png");

    }//GEN-LAST:event_jacketClickableMouseEntered

    private void jacketClickableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jacketClickableMouseExited
        // TODO add your handling code here:
        setLabelIcon(jacketClickable, "Jacket.png");
    }//GEN-LAST:event_jacketClickableMouseExited

    private void hatClickableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hatClickableMouseEntered
        // TODO add your handling code here:
        setLabelIcon(hatClickable, "Hat_expand.png");
    }//GEN-LAST:event_hatClickableMouseEntered

    private void hatClickableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hatClickableMouseExited
        // TODO add your handling code here:
        setLabelIcon(hatClickable, "Hat.png");

    }//GEN-LAST:event_hatClickableMouseExited

    private void addItemButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButonActionPerformed
        // TODO add your handling code here:
        //Remove the mainPanel to add the addItemPanel.
        this.remove(mainPanel);
        // Set the boundry of addItemPanel to the defautlPanelPosition to prevent 
        // pannel from goind out of frame.
        addItemPanel.setBounds(defaultPanelPositions);
        this.add(addItemPanel);
        repaint();
        revalidate();
    }//GEN-LAST:event_addItemButonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        boolean fieldsValid = checkFields();

        if (!fieldsValid) {
            // Show dialog box
            JOptionPane.showMessageDialog(this, "Some of the fields are empty!",
                    "Error!!", JOptionPane.ERROR_MESSAGE);
        }

        else {
            String itemId = itemIdText.getText();
            String itemName = itemNameText.getText();
            String gender = (maleGenderRadio.isSelected()) ? "Male" : "Female";
            String category = categoryCombo.getSelectedItem().toString();
            String size = sizeCombo.getSelectedItem().toString();
            String brand = brandText.getText();
            String price = priceText.getText();
            String stock = stockText.getText();
            String stringUserRating = String.valueOf(this.userRating);
            String discount = (discountText.getText().isEmpty()) ? "0" : discountText.getText();
            // TODO add dry cleaning
            String dryCleaning;
            if (washableCheck.isSelected() && dryableCheck.isSelected()) {
                dryCleaning = "Washable & Dryable";
            }
            else if (washableCheck.isSelected()) {
                dryCleaning = "Washable";
            }
            else if (dryableCheck.isSelected()) {
                dryCleaning = "Dryable";
            }
            else {
                dryCleaning = "No Dry Cleaning";
            }

            String remarks = (remarksText.getText().isEmpty()) ? "N.A" : remarksText.getText();

            // Commas can be a comman occurance, use "~" instead.
            dataField = itemId + "~" + itemName + "~" + gender + "~" + category + "~" + size + "~"
                    + brand + "~" + price + "~" + stock + "~" + stringUserRating + "~" + discount + "~"
                    + dryCleaning + "~" + remarks + "~" + "\n";

            // Clear all the fields
            clearFields();

            saveToFile(dataField);

            JOptionPane.showMessageDialog(this, "New Item has been added!",
                    "Success!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void itemIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemIdTextActionPerformed

    private void maleGenderRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleGenderRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleGenderRadioActionPerformed

    private void dryableCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dryableCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dryableCheckActionPerformed

    private void stockTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockTextActionPerformed

    private void starRating1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starRating1ActionPerformed
        // TODO add your handling code here:
        changeStar(0);
    }//GEN-LAST:event_starRating1ActionPerformed

    private void starRating2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starRating2ActionPerformed
        // TODO add your handling code here:
        changeStar(1);
    }//GEN-LAST:event_starRating2ActionPerformed

    private void starRating3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starRating3ActionPerformed
        // TODO add your handling code here:
        changeStar(2);
    }//GEN-LAST:event_starRating3ActionPerformed

    private void starRating4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starRating4ActionPerformed
        // TODO add your handling code here:
        changeStar(3);
    }//GEN-LAST:event_starRating4ActionPerformed

    private void starRating5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starRating5ActionPerformed
        // TODO add your handling code here:
        changeStar(4);
    }//GEN-LAST:event_starRating5ActionPerformed

    private void checkItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkItemButtonActionPerformed
        setTablePanel(0);
        setLabelIcon(goBackAddItem, "back.png");
    }//GEN-LAST:event_checkItemButtonActionPerformed

    private void shoeClickableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shoeClickableMouseClicked
        // TODO add your handling code here:
        setTablePanel(1);
    }//GEN-LAST:event_shoeClickableMouseClicked

    private void jacketClickableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jacketClickableMouseClicked
        // TODO add your handling code here:
        setTablePanel(3);
    }//GEN-LAST:event_jacketClickableMouseClicked

    private void pantClickableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pantClickableMouseClicked
        // TODO add your handling code here:
        setTablePanel(5);
    }//GEN-LAST:event_pantClickableMouseClicked

    private void sweaterClickableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sweaterClickableMouseClicked
        // TODO add your handling code here:
        setTablePanel(2);
    }//GEN-LAST:event_sweaterClickableMouseClicked

    private void hatClickableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hatClickableMouseClicked
        // TODO add your handling code here:
        setTablePanel(4);
    }//GEN-LAST:event_hatClickableMouseClicked

    private void itemIdTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemIdTextInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_itemIdTextInputMethodTextChanged

    private void itemIdTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemIdTextKeyPressed
        // TODO add your handling code here:
        checkKey(itemIdText, evt, false);
    }//GEN-LAST:event_itemIdTextKeyPressed

    private void priceTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyPressed
        // TODO add your handling code here:
        checkKey(priceText, evt, false);
    }//GEN-LAST:event_priceTextKeyPressed

    private void stockTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockTextKeyPressed
        // TODO add your handling code here:
        checkKey(stockText, evt, false);
    }//GEN-LAST:event_stockTextKeyPressed

    private void discountTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextKeyPressed
        // TODO add your handling code here:
        checkKey(discountText, evt, true);
    }//GEN-LAST:event_discountTextKeyPressed

    private void discountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountTextActionPerformed

    private void discountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextKeyReleased
        // TODO add your handling code here:
        String discountString = discountText.getText();
        if (!discountString.isEmpty()) {
            if (Float.valueOf(discountString) > 99.9f) {
                discountText.setText("99.9");
            }
        }
    }//GEN-LAST:event_discountTextKeyReleased

    private void selectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectMenuItemActionPerformed
        // TODO add your handling code here:

        // Set up a filter to only show text(*.txt) files.
        FileNameExtensionFilter textFileFilter = new FileNameExtensionFilter("Text Files", "txt");
        fileChooser.setFileFilter(textFileFilter);

        int actionValue = fileChooser.showOpenDialog(this);
        if (actionValue == JFileChooser.APPROVE_OPTION) {
            this.file_name = fileChooser.getSelectedFile().getAbsolutePath();
            setTablePanel(0);
        }

    }//GEN-LAST:event_selectMenuItemActionPerformed

    private void optionsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsMenuActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_optionsMenuActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        // TODO add your handling code here:
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void aboutDialogFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aboutDialogFocusLost
        // TODO add your handling code here:
        aboutDialog.setVisible(false);
    }//GEN-LAST:event_aboutDialogFocusLost

    private void categoryInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryInfoButtonActionPerformed
        // TODO add your handling code here:
        if (currentTableData != null) {
            String categoryName = showCategoriesCombo.getSelectedIndex() == 0 ? "All" : (String) showCategoriesCombo.getSelectedItem();
            String categoryInfo = "Category " + categoryName + " has " + String.valueOf(currentTableData.size()) + " items.";
            JOptionPane.showMessageDialog(this, categoryInfo,
                    "Info", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            showItemAddWarning();
        }
    }//GEN-LAST:event_categoryInfoButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        String[] foundFields;

        if (currentTableData != null) {
            if (!searchBoxText.getText().isEmpty()) {
                String allFields = "";

                // If currentTableData gets initialized, the size of the arrayList becomes 0 if the category has no items.
                if (currentTableData.size() > 0) {
                    foundFields = SearchAndSort.search(currentTableData,
                            PRICE_INDEX, Integer.valueOf(searchBoxText.getText()));
                }
                else {
                    foundFields = null;
                }

                // The category may not have the searched item.
                if (foundFields != null) {
                    int index = 0;
                    for (String values : foundFields) {
                        allFields = allFields + COLUMNS[index] + ": " + values + "\n";
                        index++;
                    }

                    JOptionPane.showMessageDialog(this, allFields,
                            "Items Found.", JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    // Show error message if the item is not found.
                    JOptionPane.showMessageDialog(this, "No items found in this category!",
                            "Items not found.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
        else {
            showItemAddWarning();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sortPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortPriceButtonActionPerformed
        // TODO add your handling code here:

        if (currentTableData != null) {
            SearchAndSort.sort(currentTableData, PRICE_INDEX);
            setTableRows(currentTableData);
        }
        else {
            JOptionPane.showMessageDialog(this, "Add some items first!",
                    "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_sortPriceButtonActionPerformed

    private void searchBoxTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchBoxTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxTextFocusLost

    private void searchBoxTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchBoxTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxTextFocusGained

    private void showCategoriesComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showCategoriesComboItemStateChanged
        // TODO add your handling code here:

        // Only listen for selection event.
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            ArrayList<String[]> allData = getFromFile();

            int index = showCategoriesCombo.getSelectedIndex();

            // Populate the table
            if (allData != null) {
                ArrayList<String[]> holderList = new ArrayList();

                for (String[] row : allData) {

                    if (row[CATEGORY_INDEX].equals((String) showCategoriesCombo.getSelectedItem())) {
                        holderList.add(row);
                    }
                }
                currentTableData = holderList;

                if (!(index == 0)) {
                    setTableRows(currentTableData);
                }
                else {
                    currentTableData = allData;
                    setTableRows(allData);
                }
            }

            //Change the background color
            // To make the text visible for all backgrounds, set the color to black
            // for light background color and white for dark ones
            if (index == 2 || index == 4) {
                filterTitleLabel.setForeground(Color.BLACK);
                showCategoryLabel.setForeground(Color.BLACK);
                searchByLabel.setForeground(Color.BLACK);
            }
            else {
                filterTitleLabel.setForeground(Color.WHITE);
                showCategoryLabel.setForeground(Color.WHITE);
                searchByLabel.setForeground(Color.WHITE);
            }
            tablePannel.setBackground(backgroundColors.get(index));
            filterPanel.setBackground(backgroundColors.get(index));
            repaint();
        }
    }//GEN-LAST:event_showCategoriesComboItemStateChanged

    private void goBackTablePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackTablePanelMouseExited
        // TODO add your handling code here:
        setLabelIcon(goBackTablePanel, "back.png");
    }//GEN-LAST:event_goBackTablePanelMouseExited

    private void goBackTablePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackTablePanelMouseEntered
        // TODO add your handling code here:
        setLabelIcon(goBackTablePanel, "back_large.png");
    }//GEN-LAST:event_goBackTablePanelMouseEntered

    private void goBackTablePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackTablePanelMouseClicked
        // TODO add your handling code here:
        setLabelIcon(goBackTablePanel, "back.png");
        this.remove(tablePannel);
        this.add(mainPanel);
        repaint();
        revalidate();

    }//GEN-LAST:event_goBackTablePanelMouseClicked

    private void goBackAddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackAddItemMouseClicked
        // TODO add your handling code here:this.remove(tablePannel);
        this.remove(addItemPanel);
        this.add(mainPanel);
        setLabelIcon(goBackAddItem, "back.png");
        repaint();
        revalidate();
    }//GEN-LAST:event_goBackAddItemMouseClicked

    private void goBackAddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackAddItemMouseEntered
        // TODO add your handling code here:
        setLabelIcon(goBackAddItem, "back_large.png");
    }//GEN-LAST:event_goBackAddItemMouseEntered

    private void goBackAddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackAddItemMouseExited
        // TODO add your handling code here:
        setLabelIcon(goBackAddItem, "back.png");
    }//GEN-LAST:event_goBackAddItemMouseExited

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void goBackTablePanelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_goBackTablePanelFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_goBackTablePanelFocusLost

    private void goBackTablePanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_goBackTablePanelFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_goBackTablePanelFocusGained

    /*
     User Defined methods
     */
    private void setTablePanel(int index) {

        this.remove(mainPanel);
        this.remove(addItemPanel);

        // Reset the table
        resetTable();

        // Reset the combobox so that the action listner can listen to the change
        // in index and act accordingly.
        showCategoriesCombo.setSelectedIndex(-1);
        showCategoriesCombo.setSelectedIndex(index);

        // To make the text visible for all backgrounds, set the color to black
        // for light background color and white for dark ones
        if (index == 2 || index == 4) {
            filterTitleLabel.setForeground(Color.BLACK);
            showCategoryLabel.setForeground(Color.BLACK);
            searchByLabel.setForeground(Color.BLACK);
        }
        else {
            filterTitleLabel.setForeground(Color.WHITE);
            showCategoryLabel.setForeground(Color.WHITE);
            searchByLabel.setForeground(Color.WHITE);
        }

        // Set the boundry of tablePanel to the defautlPanelPosition to prevent 
        // pannel from going out of frame.
        tablePannel.setBackground(backgroundColors.get(index));
        filterPanel.setBackground(backgroundColors.get(index));
        tablePannel.setBounds(defaultPanelPositions);
        this.add(tablePannel);
        repaint();
        revalidate();
    }

    private void setTableRows(ArrayList<String[]> fieldData) {
        if (fieldData != null) {
            resetTable();
            DefaultTableModel mTableModel = (DefaultTableModel) itemsTable.getModel();
            int rowNum = 0;
            for (String[] row : fieldData) {
                mTableModel.insertRow(rowNum, row);
                rowNum++;
            }

            itemsTable.setModel(mTableModel);
        }
    }

    private void showItemAddWarning() {
        JOptionPane.showMessageDialog(this, "Add some items first!",
                "Warning", JOptionPane.WARNING_MESSAGE);
    }

    private void checkKey(JTextField component, KeyEvent keyEvent, boolean hasDecimal) {

        // See if the character of the key is a digit
        boolean isDigit = Character.isDigit(keyEvent.getKeyChar());

        //Check if the pressed key is a digit or backspace
        if (!hasDecimal) {
            if (isDigit || keyEvent.getKeyCode() == 8) {
                component.setEditable(true);
            }
            else {
                component.setEditable(false);
            }
        }
        else {
            // There are two key codes for period(.) - 110 and 46
            if (isDigit || keyEvent.getKeyCode() == 8
                    || keyEvent.getKeyCode() == 110
                    || keyEvent.getKeyCode() == 46) {

                // Make sure there are no two decimal points.
                if (keyEvent.getKeyCode() == 110 || keyEvent.getKeyCode() == 46) {
                    if (!component.getText().contains(".")) {
                        component.setEditable(true);
                    }
                    else {
                        component.setEditable(false);
                    }
                }
                else {
                    component.setEditable(true);
                }

                // Make sure that discount amount text lenght is not greater than 3
                String currentValue = component.getText();
                if (!currentValue.isEmpty()) {
                    if (currentValue.length() > 3) {
                        if (keyEvent.getKeyCode() != 8) {
                            component.setEditable(false);
                        }
                    }
                }

            }
            else {
                component.setEditable(false);
            }
        }
    }

    private boolean checkFields() {
        boolean isValid = true;
        for (JTextField comp : compulsaryFields) {
            if (comp.getText().isEmpty()) {
                isValid = false;
                comp.setBorder(errorBorder);
            }
            else {
                comp.setBorder(defaultBorder);
            }
        }

        if (sizeCombo.getSelectedIndex() == 0) {
            isValid = false;
            sizeLabel.setBorder(errorBorder);
        }
        else {
            sizeLabel.setBorder(defaultLableBorder);
        }

        if (categoryCombo.getSelectedIndex() == 0) {
            isValid = false;
            categoryLabel.setBorder(errorBorder);
        }
        else {
            categoryLabel.setBorder(defaultLableBorder);
        }

        if (maleGenderRadio.isSelected() || femaleGenderRadio.isSelected()) {
            genderLabel.setBorder(defaultLableBorder);
        }
        else {
            genderLabel.setBorder(errorBorder);
        }

        return isValid;
    }

    private void setLabelIcon(javax.swing.JLabel label, String iconName) {
        // All the icon resources are in the same folder.
        // Set the label's icon by passing only the icon name and lable as arguments.

        label.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/informationSystem/Selected_icon/" + iconName)));

        // Repaint the UI to prevent glitches.
        repaint();
        revalidate();
    }

    private void resetStar() {

        // Reset the user rating to zero.
        userRating = 0;
        // Set all stars as unselected
        for (JButton starButton : allStarButtons) {
            starButton.setIcon(new javax.swing.ImageIcon(getClass()
                    .getResource("/informationSystem/Selected_icon/star_unslelected.png")));

        }
    }

    private void clearFields() {

        for (JTextField textField : compulsaryFields) {
            textField.setText("");
        }

        discountText.setText("");
        remarksText.setText("");
        sizeCombo.setSelectedIndex(0);
        genderButtonGroup.clearSelection();
        categoryCombo.setSelectedIndex(0);
        washableCheck.setSelected(false);
        dryableCheck.setSelected(false);
        resetStar();

    }

    private void changeStar(int starRating) {
        boolean done = false;
        userRating = starRating + 1;

        for (JButton button : allStarButtons) {

            if (!done) {
                button.setIcon(new javax.swing.ImageIcon(getClass()
                        .getResource("/informationSystem/Selected_icon/star_selected.png")));
            }
            else {
                button.setIcon(new javax.swing.ImageIcon(getClass()
                        .getResource("/informationSystem/Selected_icon/star_unslelected.png")));
            }

            if (allStarButtons.get(starRating) == button) {
                done = true;
            }
        }

    }

    private ArrayList<String[]> getFromFile() {

        try {
            return DataUtils.getStringData(file_name);
        }
        catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Add Some Data First!!",
                    "Error!!", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    private void resetTable() {

        DefaultTableModel model = (DefaultTableModel) itemsTable.getModel();
        int rows = model.getRowCount();

        for (int i = 0; i < rows; i++) {

            model.removeRow(0);
        }
        // Add 9 empty rows to fill up the blank space
        model.setRowCount(9);
        itemsTable.setModel(model);
    }

    private void saveToFile(String value) {
        DataUtils.saveStringData(value, file_name);
    }

    private Font getUserFont(String name, int size) {
        // Gets the font from the fonts folder.
        try {
            InputStream is = getClass().getResourceAsStream("fonts/" + name);
            return Font.createFont(Font.TRUETYPE_FONT,
                    is).deriveFont((float) size);

        }
        catch (FontFormatException | IOException e) {
            e.printStackTrace();
            // If the font file doesn't exist, return 'Arial'
            return new Font("Arial", 0, size);

        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClothingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClothingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClothingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClothingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClothingInfo().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JLabel aboutDialogLogo;
    private javax.swing.JLabel aboutTextImage;
    private javax.swing.JButton addItemButon;
    private javax.swing.JPanel addItemPanel;
    private javax.swing.JPanel addItemPanelBackHolder;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JTextField brandText;
    private javax.swing.JComboBox<String> categoryCombo;
    private javax.swing.JButton categoryInfoButton;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton checkItemButton;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JTextField discountText;
    private javax.swing.JLabel dryCleaningLabel;
    private javax.swing.JCheckBox dryableCheck;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JRadioButton femaleGenderRadio;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JLabel filterTitleLabel;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel goBackAddItem;
    private javax.swing.JLabel goBackTablePanel;
    private javax.swing.JLabel hatClickable;
    private javax.swing.JPanel hatPanel;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JLabel itemIdLabel;
    private javax.swing.JTextField itemIdText;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JTextField itemNameText;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jacketClickable;
    private javax.swing.JPanel jacketPanel;
    private javax.swing.JLabel logoImg;
    private javax.swing.JLabel mainLogo;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton maleGenderRadio;
    private javax.swing.JPopupMenu.Separator menuSeparator;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JLabel pantClickable;
    private javax.swing.JPanel pantPanel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceText;
    private javax.swing.JLabel ratingsLabel;
    private javax.swing.JLabel remarksLabel;
    private javax.swing.JTextField remarksText;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchBoxText;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchByLabel;
    private javax.swing.JMenuItem selectMenuItem;
    private javax.swing.JLabel shoeClickable;
    private javax.swing.JPanel shoePanel;
    private javax.swing.JComboBox<String> showCategoriesCombo;
    private javax.swing.JLabel showCategoryLabel;
    private javax.swing.JComboBox<String> sizeCombo;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JButton sortPriceButton;
    private javax.swing.JButton starRating1;
    private javax.swing.JButton starRating2;
    private javax.swing.JButton starRating3;
    private javax.swing.JButton starRating4;
    private javax.swing.JButton starRating5;
    private javax.swing.JLabel stockLabel;
    private javax.swing.JTextField stockText;
    private javax.swing.JLabel sweaterClickable;
    private javax.swing.JPanel sweaterPanel;
    private javax.swing.JLabel tableLogo;
    private javax.swing.JPanel tablePanelBackHolder;
    private javax.swing.JPanel tablePannel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JCheckBox washableCheck;
    // End of variables declaration//GEN-END:variables
}
